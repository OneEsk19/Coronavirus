plot(euro_map, xlim=c(10,60) , ylim=c(10,80))
plot(euro_map, xlim=c(10,80) , ylim=c(10,80))
plot(euro_map, xlim=c(20,80) , ylim=c(10,80))
plot(euro_map, xlim=c(20,60) , ylim=c(10,80))
plot(euro_map, xlim=c(20,60) , ylim=c(10,40))
plot(euro_map, xlim=c(20,60) , ylim=c(10,50))
plot(euro_map, xlim=c(20,60) , ylim=c(10,600))
plot(euro_map, xlim=c(20,60) , ylim=c(10,60))
plot(euro_map, xlim=c(20,60) , ylim=c(10,700))
plot(euro_map, xlim=c(20,60) , ylim=c(10,70))
plot(euro_map)
plot(euro_map, xlim=c(20,60) , ylim=c(10,70))
plot(euro_map, xlim=c(20,60) , ylim=c(300,70))
plot(euro_map, xlim=c(20,60) , ylim=c(30,70))
plot(euro_map, xlim=c(20,50) , ylim=c(30,70))
plot(euro_map, xlim=c(20,50) , ylim=c(30,60))
plot(euro_map, xlim=c(20,50) , ylim=c(30,70))
plot(euro_map, xlim=c(20,40) , ylim=c(30,70))
plot(euro_map, xlim=c(30,50) , ylim=c(30,70))
plot(euro_map, xlim=c(30,50) , ylim=c(40,80))
plot(euro_map, xlim=c(30,50) , ylim=c(40, 70))
plot(euro_map, xlim=c(30,50) , ylim=c(40, 75))
plot(euro_map, xlim=c(30,50) , ylim=c(35, 75))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
url <- "https://www.worldometers.info/coronavirus/"
all <-url%>%read_html()%>%html_table()%>%.[[1]]
# remove the continents and "world"
coronavirus <- all[9:230,-1]
# Remove symbols from formatting of numbers
coronavirus[]<-lapply(coronavirus, function(x) (gsub("\\,|\\+", "", (x))))
# convert all but the first and last column to numeric
coronavirus[,c(2:14, 16:21)] <- sapply(coronavirus[c(2:14, 16:21)],as.numeric)
# assign appropriate column names
colnames(coronavirus) <- c("Country", "TotalCases", "NewCases", "TotalDeaths", "NewDeaths", "TotalRecovered", "NewRecovered", "ActiveCases", "CriticalCases", "Cases_Per1M", "Deaths_per1M", "TotalTests", "Tests_per1M", "Population", "Continent", "1CaseeveryXppl", "1DeatheveryXppl", "1TesteveryXppl", "NewCases_per1M", "NewDeaths_per1M", "ActiveCases_per1M")
# deaths per million
a <- coronavirus[!is.na(coronavirus$Deaths_per1M),]
# Examine this variable to see what would be appropriate to extract. Don't want too many data points and dont want too few
range(a)
# Examine this variable to see what would be appropriate to extract. Don't want too many data points and dont want too few
range(a$Deaths_per1M)
# Extract the required range
topdeathrate <- a[a$Deaths_per1M>=1500, ]
# Plot it
ggplot(topdeathrate, aes(x=reorder(Country, Deaths_per1M), y=Deaths_per1M, fill=Continent))+
geom_bar(stat = "identity")+
xlab("Country")+
ylab("Deaths per 1,000,000")+
theme(axis.text.x = element_text(angle = 90))+
coord_flip()
# deaths per million
a <- coronavirus[!is.na(coronavirus$Deaths_per1M),]
# Examine this variable to see what would be appropriate to extract. Don't want too many data points and dont want too few
range(a$Deaths_per1M)
# Extract the required range
topdeathrate <- a[a$Deaths_per1M>=2000, ]
# Plot it
ggplot(topdeathrate, aes(x=reorder(Country, Deaths_per1M), y=Deaths_per1M, fill=Continent))+
geom_bar(stat = "identity")+
xlab("Country")+
ylab("Deaths per 1,000,000")+
theme(axis.text.x = element_text(angle = 90))+
coord_flip()
b <- coronavirus[!is.na(coronavirus$NewCases_per1M),]
surge <- b[b$NewCases_per1M>=100,]
ggplot(surge, aes(x=reorder(Country, NewCases_per1M), y=NewCases_per1M, fill=Continent))+
geom_bar(stat = "identity")+
xlab("Country")+
ylab("New cases per 1,000,000")+
theme(axis.text.x = element_text(angle = 90))+
coord_flip()
b <- coronavirus[!is.na(coronavirus$NewCases_per1M),]
surge <- b[b$NewCases_per1M>=150,]
ggplot(surge, aes(x=reorder(Country, NewCases_per1M), y=NewCases_per1M, fill=Continent))+
geom_bar(stat = "identity")+
xlab("Country")+
ylab("New cases per 1,000,000")+
theme(axis.text.x = element_text(angle = 90))+
coord_flip()
# define the url where the data is
url <- "https://www.worldometers.info/coronavirus/"
# read the data from the table
all <-url%>%read_html()%>%html_table()%>%.[[1]]
# exclude the continents and world variables
coronavirus <- all[9:230,-1]
# Remove symbols from formatting of numbers
coronavirus[]<-lapply(coronavirus, function(x) (gsub("\\,|\\+", "", (x))))
# read the data from the table
all <-url%>%read_html()%>%html_table()%>%.[[1]]
library(tidyverse)
library(rvest)
# define the url where the data is
url <- "https://www.worldometers.info/coronavirus/"
# read the data from the table
all <-url%>%read_html()%>%html_table()%>%.[[1]]
# exclude the continents and world variables
coronavirus <- all[9:230,-1]
# Remove symbols from formatting of numbers
coronavirus[]<-lapply(coronavirus, function(x) (gsub("\\,|\\+", "", (x))))
coronavirus[,c(2:14, 16:21)] <- sapply(coronavirus[c(2:14, 16:21)],as.numeric)
colnames(coronavirus) <- c("Country", "TotalCases", "NewCases", "TotalDeaths",
"NewDeaths", "TotalRecovered", "NewRecovered", "ActiveCases",
"CriticalCases", "Cases_Per1M", "Deaths_per1M", "TotalTests",
"Tests_per1M", "Population", "Continent", "1CaseeveryXppl",
"1DeatheveryXppl",  "1TesteveryXppl",   "NewCases_per1M",
"NewDeaths_per1M", "ActiveCases_per1M")
# Examine the variable we are going to use
any(is.na(coronavirus$NewCases_per1M))
str(coronavirus$NewCases_per1M)
testrange <- na.omit(coronavirus$NewCases_per1M)
range(testrange)
##########################################################
library(rgdal)
my_spdf <- readOGR("C:/Users/georg/Documents/R_Maps/TM_WORLD_BORDERS_SIMPL-0.3.shp")
euro_map <- my_spdf[my_spdf@data$REGION==150, ]
plot(worldmap, xlim=c(-20,60) , ylim=c(30,40))
euro_map <- my_spdf[my_spdf@data$REGION==150, ]
plot(worldmap, xlim=c(-20,60) , ylim=c(30,40))
plot(euro_map, xlim=c(-20,60) , ylim=c(30,40))
euro_map$NAME
coronavirus$Country
len(euro_map$NAME)
length(euro_map$NAME)
#####################################################
europe <- coronavirus[coronavirus$Continent=="Europe"]
#####################################################
europe <- coronavirus[coronavirus$Continent=="Europe",]
setdiff(euro_map$NAME, europe$Country)
europe$Country
knitr::opts_chunk$set(echo = TRUE)
# how many in the map data?
length(euro_map$NAME)
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
europe$Country
euro_map[euro_map$NAME=="Holy See (Vatican City)"] <- "Vatican City"
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
europe[europe$Country=="UK"] <- "United Kingdom"
europe[europe$Country=="UK",] <- "United Kingdom"
europe[europe$Country=="UK"] <- "United Kingdom"
europe[,europe$Country=="UK"] <- "United Kingdom"
europe[europe$Country=="UK"] <- "United Kingdom"
euro_map[euro_map$NAME=="Holy See (Vatican City)"] <- "Vatican City"
euro_map[euro_map$NAME=="United Kingdom"] <- "UK"
setdiff(euro_map$NAME, europe$Country)
euro_map[euro_map$NAME=="Republic of Moldova"] <- "Moldova"
setdiff(euro_map$NAME, europe$Country)
euro_map[euro_map$NAME=="The former Yugoslav Republic of Macedonia"] <- "North Macedonia"
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
euro_map[euro_map$NAME=="Faroe Islands"] <- "Faeroe Islands
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# Seeing how the "missing" countries are named in the corona data
# Seeing how the "missing" countries are named in the corona data
europe$Country
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
euro_map[euro_map$NAME=="Faroe Islands"] <- "Faeroe Islands"
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
euro_map[euro_map$NAME=="Czech Republic"] <- "Czechia"
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# subset europe data from main table
europe <- coronavirus[coronavirus$Continent=="Europe",]
# = 48 obs
# how many in the map data?
length(euro_map$NAME)
# = 51
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# Listed below is what occurs in map data, but not in our corona data
map_object <- readOGR("C:/Users/georg/Documents/R_Maps/TM_WORLD_BORDERS_SIMPL-0.3.shp")
euro_map <- map_object[map_object@data$REGION==150, ]
plot(euro_map, xlim=c(30,50) , ylim=c(35, 75))
# subset europe data from main table
europe <- coronavirus[coronavirus$Continent=="Europe",]
# = 48 obs
# how many in the map data?
length(euro_map$NAME)
# = 51
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# Listed below is what occurs in map data, but not in our corona data
europe$Country[europe$Country=="UK"] <- "United Kingdom"
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
setdiff(euro_map$NAME, europe$Country)
setdiff(euro_map$NAME, europe$Country)
europe$Country[europe$Country=="Czechia"] <- "Czech Republic"
setdiff(euro_map$NAME, europe$Country)
europe$Country[europe$Country=="North Macedonia"] <- "The former Yugoslav Republic of Macedonia"
setdiff(euro_map$NAME, europe$Country)
europe$Country[europe$Country=="Faeroe Islands"] <- "Faroe Islands"
setdiff(euro_map$NAME, europe$Country)
europe$Country[europe$Country=="Faeroe Islands"] <- "Faroe Islands"
europe$Country[europe$Country=="Moldova"] <- "Republic of Moldova"
europe$Country[europe$Country=="Vatican City"] <- "Holy See (Vatican City)"
setdiff(euro_map$NAME, europe$Country)
View(europe)
euro_obj <- merge(euro_map, europe, by.x="NAME", by.y="Country")
head(euro_obj)
euro_obj@data %>%
ggplot(aes(x=as.numeric(NewCases_per1M))) +
geom_histogram(bins = 20)
euro_obj@data %>%
ggplot(aes(x=as.numeric(NewCases_per1M))) +
geom_histogram(bins = 20, fill="darkslategrey", color="white")
euro_obj@data %>%
ggplot(aes(x=as.numeric(NewCases_per1M))) +
geom_histogram(bins = 15, fill="darkslategrey", color="white")
display.brewer.all()
par(mar=c(3,4,2,2))
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colors <- my_colors[as.numeric(class_of_country)]
my_colours <- my_colours[as.numeric(class_of_country)]
my_colours <- my_colours[as.numeric(class_of_country)]
par(mar=c(3,4,2,2))
display.brewer.all()
# I like PuGuBn
my_colours <- brewer.pal(9, "PuGuBn")
my_colors <- brewer.pal(9, "PuGuBn")
my_colors <- brewer.pal("PuGuBn")
my_colours <- brewer.pal(7,"PuGuBn")
display.brewer.all()
my_colours <- brewer.pal(7,"PuGu")
my_colours <- brewer.pal(7,"Blues")
my_colours <- colorRampPalette(my_colours)(15)
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0")
par(mar=c(3,4,2,2))
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0")
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", title="New cases per 1M")
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", title("New cases per 1M"))
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0")
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 60), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,50) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,45) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,40) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,35) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,35) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(20,35) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(30,35) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(35,45) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="New cases per 1M")
View(europe)
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="Deaths per 1M")
europe$Country=="Spain"
europe[europe$Country=="Spain",]
spain <- europe[europe$Country=="Spain",]
View(spain)
Sys.Date()
subtitl <- paste("As of ", Sys.Date())
print(subti)
print(subtitl)
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main="Deaths per 1M", sub=subtitl)
subtitl <- paste("as of ", Sys.Date())
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M", subtitl)
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M", subtitl))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M", subtitl))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
library(tidyverse)
library(rvest)
library(rgdal)
library(RColorBrewer)
url <- "https://www.worldometers.info/coronavirus/"
all <-url%>%read_html()%>%html_table()%>%.[[1]]
# exclude the continents and world variables
coronavirus <- all[9:230,-1]
# Remove symbols from formatting of numbers
coronavirus[]<-lapply(coronavirus, function(x) (gsub("\\,|\\+", "", (x))))
# convert all but the first and last column to numeric
coronavirus[,c(2:14, 16:21)] <- sapply(coronavirus[c(2:14, 16:21)],as.numeric)
# rename the cols
colnames(coronavirus) <- c("Country", "TotalCases", "NewCases", "TotalDeaths",
"NewDeaths", "TotalRecovered", "NewRecovered", "ActiveCases",
"CriticalCases", "Cases_Per1M", "Deaths_per1M", "TotalTests",
"Tests_per1M", "Population", "Continent", "1CaseeveryXppl",
"1DeatheveryXppl",  "1TesteveryXppl",   "NewCases_per1M",
"NewDeaths_per1M", "ActiveCases_per1M")
map_object <- readOGR("C:/Users/georg/Documents/R_Maps/TM_WORLD_BORDERS_SIMPL-0.3.shp")
euro_map <- map_object[map_object@data$REGION==150, ]
plot(euro_map, xlim=c(30,50) , ylim=c(35, 75))
# subset europe data from main table
europe <- coronavirus[coronavirus$Continent=="Europe",]
# = 48 obs
# how many in the map data?
length(euro_map$NAME)
# = 51
# what are the discrepancies?
setdiff(euro_map$NAME, europe$Country)
# Listed below is what occurs in map data, but not in our corona data
# Seeing how the "missing" countries are named in the corona data
europe$Country
europe$Country[europe$Country=="UK"] <- "United Kingdom"
europe$Country[europe$Country=="Czechia"] <- "Czech Republic"
europe$Country[europe$Country=="North Macedonia"] <- "The former Yugoslav Republic of Macedonia"
europe$Country[europe$Country=="Faeroe Islands"] <- "Faroe Islands"
europe$Country[europe$Country=="Moldova"] <- "Republic of Moldova"
europe$Country[europe$Country=="Vatican City"] <- "Holy See (Vatican City)"
setdiff(euro_map$NAME, europe$Country)
# Just going to ignore these islands for now
euro_map[euro_map$NAME=="Holy See (Vatican City)"] <- "Vatican City"
euro_obj <- merge(euro_map, europe, by.x="NAME", by.y="Country")
head(euro_obj)
# success!
euro_obj@data %>%
ggplot(aes(x=as.numeric(NewCases_per1M))) +
geom_histogram(bins = 15, fill="darkslategrey", color="white")
par(mar=c(3,4,2,2))
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
View(coronavirus)
display.brewer.all()
par(mar=c(3,4,2,2))
display.brewer.all()
par(mar=c(2,2,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
par(mar=c(2,2,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
par(mar=c(2,2,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
par(mar=c(2,4,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
par(mar=c(2,4,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
par(mar=c(2,4,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
View(europe)
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[class_of_country]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
par(mar=c(2,4,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
par(mar=c(2,4,2,2)) # bottom, left, top, right
display.brewer.all()
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[class_of_country]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
# Attribute the appropriate color to each country
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[class_of_country]
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
# define a pallette
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
# assign the colours to the countries
class_of_country <- cut(euro_obj@data$Deaths_per1M, 15)
my_colours <- my_colours[class_of_country]
# plot it
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("Deaths per 1M as of ", Sys.Date()))
# define a palette
my_colours <- brewer.pal(7,"Oranges")
my_colours <- colorRampPalette(my_colours)(15)
# Attribute the appropriate color to each country
class_of_country <- cut(euro_obj@data$Cases_Per1M, 15)
my_colours <- my_colours[as.numeric(class_of_country)]
# Plot it
plot(euro_obj, xlim=c(40,55) , ylim=c(35, 75), col=my_colours,  bg = "#A6CAE0", main=paste("New cases per 1M as of ", Sys.Date()))
